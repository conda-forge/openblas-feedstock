# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json
# ensure INTERFACE64 variable gets detected by conda-build
# [INTERFACE64 == "foobar"]
schema_version: 1

context:
  version: 0.3.30
  build_number: 0
  string_prefix: ${{ "openmp" if OPENMP == 1 else "pthreads" }}
  ILP64_string: ${{ "" if SYMBOLSUFFIX != "64_" else " (ILP64 interface) " }}

recipe:
  name: openblas-split
  version: ${{ version }}

source:
  url: https://github.com/OpenMathLib/OpenBLAS/archive/v${{ version }}.tar.gz
  sha256: 27342cff518646afb4c2b976d809102e368957974c250a25ccc965e53063c95d
  patches:
    # don't run test_fork in emulation, it has a tendency to hang indefinitely
    - if: build_platform != target_platform
      then: patches/0001-don-t-run-test_fork-in-cross-compilation.patch

build:
  number: ${{ build_number }}

outputs:
  - package:
      name: libopenblas${{ name_suffix }}
    build:
      files:
        # Include files like
        #   - libopenblasp-r0.3.5.so
        #   - libopenblas_vortexp-r0.3.5.so
        #   - libopenblas.so.0
        # Avoid files
        #   - libopenblas.so
        - if: not win
          then: lib/libopenblas${{ SYMBOLSUFFIX }}*p*${{ SHLIB_EXT }}
        - if: linux
          then: lib/libopenblas${{ SYMBOLSUFFIX }}.so.*
        - if: osx
          then: lib/libopenblas${{ SYMBOLSUFFIX }}.*.dylib
        - if: win
          then: Library/bin/openblas${{ SYMBOLSUFFIX }}.dll
      string: ${{ string_prefix }}_h${{ PKG_HASH }}_${{ build_number }}
      variant:
        down_prioritize_variant: ${{ 1 if (not osx) and USE_OPENMP == 1 else 0 }}
    requirements:
      build:
        - ${{ stdlib("c") }}
        - ${{ compiler("c") }}
        - ${{ compiler("fortran") }}
        - if: USE_OPENMP == 1
          then: llvm-openmp
        - perl
        - if: not win
          then: make
        - if: win
          then: cmake
        - if: win
          then: ninja
        - if: osx
          then: objconv
        # Following is needed because the Fortran compiler add an rpath to the BUILD_PREFIX
        - if: linux and USE_OPENMP == 1
          then: _openmp_mutex * *_llvm
      host:
        - if: win and USE_OPENMP == 1
          then: llvm-openmp-fortran
      run_exports:
        - ${{ pin_subpackage("libopenblas" ~ name_suffix) }}
      # run_constraints:
      #   - ${{ pin_subpackage("openblas" ~ name_suffix, upper_bound="x.x.x") }}
    tests:
      - requirements:
          run:
            - python *
        script:
          - if: not win
            then: test -f ${PREFIX}/lib/libopenblas${{ SYMBOLSUFFIX }}p-r${{ version }}${{ SHLIB_EXT }}
          - if: 'osx and build_platform=="osx-64"'
            then: nm -g ${PREFIX}/lib/libopenblas${{ SYMBOLSUFFIX }}p-r${{ version }}${{ SHLIB_EXT }} | grep dsecnd
          # - if: not win
          #   then: python -c "import ctypes; ctypes.cdll['${PREFIX}/lib/libopenblas${{ SYMBOLSUFFIX }}p-r${{ version }}${{ SHLIB_EXT }}']"
          - if: win
            then: if not exist %PREFIX%\\Library\\bin\\openblas${{ SYMBOLSUFFIX }}.dll exit 1
  - package:
      name: openblas${{ name_suffix }}
    build:
      files:
        - if: not win
          then: include/*.h
        - if: not win
          then: lib/libopenblas${{ SYMBOLSUFFIX }}*.a
        - if: not win
          then: lib/libopenblas${{ SYMBOLSUFFIX }}${{ SHLIB_EXT }}
        - if: not win
          then: lib/pkgconfig/openblas.pc
        - if: not win
          then: lib/cmake/openblas/*
        - if: win
          then: Library/include/openblas
        - if: win
          then: Library/lib/openblas${{ SYMBOLSUFFIX }}.lib
        - if: win
          then: Library/lib/pkgconfig/openblas.pc
        - if: win
          then: Library/share/cmake/OpenBLAS
      string: ${{ string_prefix }}_h${{ PKG_HASH }}_${{ build_number }}
      variant:
        down_prioritize_variant: ${{ 1 if (not osx) and USE_OPENMP == 1 else 0 }}
    requirements:
      build:
        - ${{ stdlib("c") }}
        - ${{ compiler("c") }}
        - ${{ compiler("fortran") }}
        - perl
        - if: not win
          then: make
        - if: win
          then: cmake
        - if: win
          then: ninja
        - if: osx
          then: objconv
        - if: USE_OPENMP == 1
          then: llvm-openmp
        # Following is needed because the Fortran compiler add an rpath to the BUILD_PREFIX
        - if: linux and USE_OPENMP == 1
          then: _openmp_mutex * *_llvm
      host:
        - if: win and USE_OPENMP == 1
          then: llvm-openmp-fortran
      run:
        - ${{ pin_subpackage("libopenblas" ~ name_suffix, exact=True) }}

    tests:
      - script:
          - if: not win
            then: test -f ${PREFIX}/lib/libopenblas${{ SYMBOLSUFFIX }}.a
          - if: not win
            then: test -f ${PREFIX}/lib/libopenblas${{ SYMBOLSUFFIX }}${{ SHLIB_EXT }}
          - if: win
            then: if not exist %PREFIX%\\Library\\lib\\openblas${{ SYMBOLSUFFIX }}.lib exit 1

about:
  license: BSD-3-Clause
  license_file:
    - LICENSE
    - lapack-netlib/LICENSE
  summary: An optimized BLAS library${{ ILP64_string }}based on GotoBLAS2 1.13 BSD version
  homepage: http://www.openblas.net/
  repository: https://github.com/OpenMathLib/OpenBLAS

extra:
  recipe-maintainers:
    - gillins
    - groutr
    - jakirkham
    - isuruf
    - h-vetinari
  feedstock-name: openblas
