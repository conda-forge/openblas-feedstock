{% set version = "0.3.30" %}
{% set build_number = 2 %}

# ensure INTERFACE64 variable gets detected by conda-build
# [INTERFACE64 == "foobar"]

package:
  name: openblas-split
  version: {{ version }}

source:
  url: https://github.com/OpenMathLib/OpenBLAS/archive/v{{ version }}.tar.gz
  sha256: 27342cff518646afb4c2b976d809102e368957974c250a25ccc965e53063c95d
  patches:
    # don't run test_fork in emulation, it has a tendency to hang indefinitely
    - patches/0001-don-t-run-test_fork-in-cross-compilation.patch  # [build_platform != target_platform]
    # backport https://github.com/OpenMathLib/OpenBLAS/pull/5403
    - patches/trmv.patch

build:
  number: {{ build_number }}
  string: openmp_h{{ PKG_HASH }}_{{ build_number }}  # [USE_OPENMP == 1]
  string: pthreads_h{{ PKG_HASH }}_{{ build_number }}  # [USE_OPENMP == 0]

requirements:
  build:
    - {{ stdlib("c") }}
    - {{ compiler("c") }}
    - {{ compiler("fortran") }}
    - perl
    - make                    # [not win]
    - cmake                   # [win]
    - ninja                   # [win]
    - objconv                 # [osx]
    - llvm-openmp             # [USE_OPENMP == 1]
    # Following is needed because the Fortran compiler add an rpath to the BUILD_PREFIX
    - _openmp_mutex * *_llvm  # [linux and USE_OPENMP == 1]
  host:
    - llvm-openmp-fortran     # [win and USE_OPENMP == 1]
  run:

outputs:
  - name: libopenblas{{ name_suffix }}
    build:
      string: openmp_h{{ PKG_HASH }}_{{ build_number }}  # [USE_OPENMP == 1]
      string: pthreads_h{{ PKG_HASH }}_{{ build_number }}  # [USE_OPENMP == 0]
      track_features:
        # On Windows and Linux, pthreads was the original threading model,
        # so we use it as a default by weighing down the openmp variant.
        - openblas_threading_openmp     # [(not osx) and USE_OPENMP == 1]
        # On macOS, OpenMP was the original threading model,
        # so we use it as a default by weighing down the pthreads variant.
        - openblas_threading_pthreads   # [osx and USE_OPENMP == 0]
      run_exports:
        - {{ pin_subpackage("libopenblas" ~ name_suffix) }}
    requirements:
      build:
        - {{ stdlib("c") }}
        - {{ compiler("c") }}
        - {{ compiler("fortran") }}
        - llvm-openmp                   # [USE_OPENMP == 1]
      run_constrained:
        - {{ pin_subpackage("openblas" ~ name_suffix, max_pin="x.x.x") }}
    files:
      # Include files like
      #   - libopenblasp-r0.3.5.so
      #   - libopenblas_vortexp-r0.3.5.so
      #   - libopenblas.so.0
      # Avoid files
      #   - libopenblas.so
      - lib/libopenblas{{ SYMBOLSUFFIX }}*p*{{ SHLIB_EXT }}  # [not win]
      - lib/libopenblas{{ SYMBOLSUFFIX }}.so.*               # [linux]
      - lib/libopenblas{{ SYMBOLSUFFIX }}.*.dylib            # [osx]
      - Library/bin/openblas{{ SYMBOLSUFFIX }}.dll           # [win]
    test:
      requires:
        - python *
      commands:
        - test -f ${PREFIX}/lib/libopenblas{{ SYMBOLSUFFIX }}p-r{{ version }}{{ SHLIB_EXT }}                                    # [not win]
        - nm -g ${PREFIX}/lib/libopenblas{{ SYMBOLSUFFIX }}p-r{{ version }}{{ SHLIB_EXT }} | grep dsecnd                        # [osx and build_platform=="osx-64"]
        - python -c "import ctypes; ctypes.cdll['${PREFIX}/lib/libopenblas{{ SYMBOLSUFFIX }}p-r{{ version }}{{ SHLIB_EXT }}']"  # [not win]
        - if not exist %PREFIX%\\Library\\bin\\openblas{{ SYMBOLSUFFIX }}.dll exit 1                                            # [win]

  - name: openblas{{ name_suffix }}
    build:
      string: openmp_h{{ PKG_HASH }}_{{ build_number }}  # [USE_OPENMP == 1]
      string: pthreads_h{{ PKG_HASH }}_{{ build_number }}  # [USE_OPENMP == 0]
      track_features:
        # On Windows and Linux, pthreads was the original threading model,
        # so we use it as a default by weighing down the openmp variant.
        - openblas_threading_openmp     # [(not osx) and USE_OPENMP == 1]
        # On macOS, OpenMP was the original threading model,
        # so we use it as a default by weighing down the pthreads variant.
        - openblas_threading_pthreads   # [osx and USE_OPENMP == 0]
    files:
      - include/*.h                                       # [not win]
      - lib/libopenblas{{ SYMBOLSUFFIX }}*.a              # [not win]
      - lib/libopenblas{{ SYMBOLSUFFIX }}{{ SHLIB_EXT }}  # [not win]
      - lib/pkgconfig/openblas.pc                         # [not win]
      - lib/cmake/openblas/*                              # [not win]
      - Library/include/openblas                          # [win]
      - Library/lib/openblas{{ SYMBOLSUFFIX }}.lib        # [win]
      - Library/lib/pkgconfig/openblas.pc                 # [win]
      - Library/share/cmake/OpenBLAS                      # [win]
    requirements:
      run:
        - {{ pin_subpackage("libopenblas" ~ name_suffix, exact=True) }}
    test:
      commands:
        - test -f ${PREFIX}/lib/libopenblas{{ SYMBOLSUFFIX }}.a                       # [not win]
        - test -f ${PREFIX}/lib/libopenblas{{ SYMBOLSUFFIX }}{{ SHLIB_EXT }}          # [not win]
        - if not exist %PREFIX%\\Library\\lib\\openblas{{ SYMBOLSUFFIX }}.lib exit 1  # [win]

about:
  home: http://www.openblas.net/
  license: BSD-3-Clause
  license_file:
    - LICENSE
    - lapack-netlib/LICENSE
  summary: An optimized BLAS library based on GotoBLAS2 1.13 BSD version  # [SYMBOLSUFFIX != "64_"]
  summary: An optimized BLAS library (ILP64 interface) based on GotoBLAS2 1.13 BSD version  # [SYMBOLSUFFIX == "64_"]
  dev_url: https://github.com/OpenMathLib/OpenBLAS

extra:
  recipe-maintainers:
    - gillins
    - groutr
    - jakirkham
    - isuruf
    - h-vetinari
  feedstock-name: openblas
